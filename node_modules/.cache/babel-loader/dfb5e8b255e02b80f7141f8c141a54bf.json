{"ast":null,"code":"var _jsxFileName = \"/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Header/HeaderContainer.js\";\nimport React from 'react';\nimport Header from './Header';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAuthUserData } from '../../redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    axios.get('http://localhost:3000/auth/me', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.resultCode === 0) {\n        let _response$data$data = response.data.data,\n            name = _response$data$data.name,\n            email = _response$data$data.email;\n        this.props.setAuthUserData(name, email);\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    axios.get('http://localhost:3000/auth/me', {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.resultCode === 0) {\n        let _response$data$data2 = response.data.data,\n            name = _response$data$data2.name,\n            email = _response$data$data2.email;\n        this.props.setAuthUserData(name, email);\n      }\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  name: state.auth.name\n});\n\nexport default connect(mapStateToProps, {\n  setAuthUserData\n})(HeaderContainer);","map":{"version":3,"sources":["/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Header/HeaderContainer.js"],"names":["React","Header","axios","connect","setAuthUserData","HeaderContainer","Component","componentDidMount","get","withCredentials","then","response","data","resultCode","name","email","props","componentDidUpdate","console","log","state","render","mapStateToProps","isAuth","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,yBAA9B;;AAEA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC5CC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,GAAN,CAAU,+BAAV,EAA2C;AACzCC,MAAAA,eAAe,EAAE;AADwB,KAA3C,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAAA,kCACdF,QAAQ,CAACC,IAAT,CAAcA,IADA;AAAA,YAC7BE,IAD6B,uBAC7BA,IAD6B;AAAA,YACvBC,KADuB,uBACvBA,KADuB;AAElC,aAAKC,KAAL,CAAWZ,eAAX,CAA2BU,IAA3B,EAAiCC,KAAjC;AACD;AACJ,KAPD;AAQH;;AACDE,EAAAA,kBAAkB,GAAG;AACnBf,IAAAA,KAAK,CAACM,GAAN,CAAU,+BAAV,EAA2C;AACvCC,MAAAA,eAAe,EAAE;AADsB,KAA3C,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAAA,mCACdF,QAAQ,CAACC,IAAT,CAAcA,IADA;AAAA,YAC7BE,IAD6B,wBAC7BA,IAD6B;AAAA,YACvBC,KADuB,wBACvBA,KADuB;AAElC,aAAKC,KAAL,CAAWZ,eAAX,CAA2BU,IAA3B,EAAiCC,KAAjC;AACD;AACJ,KAPH;AAQEG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH;;AACCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD,oBAAY,KAAKL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AA1B2C;;AA4B9C,MAAMM,eAAe,GAAIF,KAAD,KAAY;AAClCG,EAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD,MADe;AAElCT,EAAAA,IAAI,EAAEM,KAAK,CAACI,IAAN,CAAWV;AAFiB,CAAZ,CAAxB;;AAKA,eAAeX,OAAO,CAACmB,eAAD,EAAkB;AAAClB,EAAAA;AAAD,CAAlB,CAAP,CAA4CC,eAA5C,CAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport * as axios from 'axios';\nimport {connect} from 'react-redux';\nimport {setAuthUserData} from '../../redux/authReducer';\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    axios.get('http://localhost:3000/auth/me', {\n      withCredentials: true\n    }).then(response => {\n        if (response.data.resultCode === 0) {\n          let {name, email} = response.data.data;\n          this.props.setAuthUserData(name, email);\n        }\n    })\n}\ncomponentDidUpdate() {\n  axios.get('http://localhost:3000/auth/me', {\n      withCredentials: true\n    }).then(response => {\n        if (response.data.resultCode === 0) {\n          let {name, email} = response.data.data;\n          this.props.setAuthUserData(name, email);\n        }\n    })\n    console.log(this.state)\n}\n  render() {\n    return (\n      <Header {...this.props} />\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  name: state.auth.name\n})\n  \nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer);"]},"metadata":{},"sourceType":"module"}