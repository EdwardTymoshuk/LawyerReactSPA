{"ast":null,"code":"var _jsxFileName = \"/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Cases/CasesContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCases, toggleIsFetching } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport Preloader from '../common/Preloader';\nimport { getCases } from '../../api/api';\n\nclass CasesContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    getCases().then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setCases(response);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }) : null, React.createElement(Cases, {\n      cases: this.props.cases,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    cases: state.casesPage.cases,\n    isFetching: state.casesPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCases,\n  toggleIsFetching\n})(CasesContainer);","map":{"version":3,"sources":["/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Cases/CasesContainer.js"],"names":["React","connect","setCases","toggleIsFetching","Cases","Preloader","getCases","CasesContainer","Component","componentDidMount","props","then","response","render","isFetching","cases","mapStateToProps","state","casesPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,0BAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,gBAAX,CAA4B,IAA5B;AACAG,IAAAA,QAAQ,GAAGK,IAAX,CAAgBC,QAAQ,IAAI;AACxB,WAAKF,KAAL,CAAWP,gBAAX,CAA4B,KAA5B;AACA,WAAKO,KAAL,CAAWR,QAAX,CAAoBU,QAApB;AACH,KAHD;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKH,KAAL,CAAWI,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAyC,IADvC,EAEH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAKH;;AAfwC;;AAkB7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHD,IAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AAFzB,GAAP;AAIH,CALD;;AAOA,eAAeb,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAuDI,cAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { setCases, toggleIsFetching } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport Preloader from '../common/Preloader';\nimport {getCases} from '../../api/api'\n\nclass CasesContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        getCases().then(response => {\n            this.props.toggleIsFetching(false);\n            this.props.setCases(response);\n        }\n        )\n    }\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader />  : null}\n            <Cases cases={this.props.cases}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        cases: state.casesPage.cases,\n        isFetching: state.casesPage.isFetching\n    }\n}\n\nexport default connect(mapStateToProps, {setCases, toggleIsFetching})(CasesContainer)"]},"metadata":{},"sourceType":"module"}