{"ast":null,"code":"var _jsxFileName = \"/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Cases/CasesContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setCases, toggleIsFetching } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport * as axios from 'axios';\nimport Preloader from '../common/Preloader';\n\nclass CasesContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get('http://localhost:3000/cases', {\n      headers: {\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTU2OGI3ZGVhNWE4MzQxM2U0M2RjMTIiLCJpYXQiOjE1ODMwODU3NDN9.xX8_VysEZVWlYVLItbV-Azk88ZT772zjyn0PxyZ0x9Q'\n      }\n    }).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setCases(response.data);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) : null, React.createElement(Cases, {\n      cases: this.props.cases,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    cases: state.casesPage.cases,\n    isFetching: state.casesPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCases,\n  toggleIsFetching\n})(CasesContainer);","map":{"version":3,"sources":["/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/components/Cases/CasesContainer.js"],"names":["React","connect","setCases","toggleIsFetching","Cases","axios","Preloader","CasesContainer","Component","componentDidMount","props","get","headers","then","response","data","render","isFetching","cases","mapStateToProps","state","casesPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,0BAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAGA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWP,gBAAX,CAA4B,IAA5B;AACAE,IAAAA,KAAK,CAACM,GAAN,CAAU,6BAAV,EAAyC;AACrCC,MAAAA,OAAO,EAAE;AACP,sBAAc;AADP;AAD4B,KAAzC,EAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,WAAKJ,KAAL,CAAWP,gBAAX,CAA4B,KAA5B;AACA,WAAKO,KAAL,CAAWR,QAAX,CAAoBY,QAAQ,CAACC,IAA7B;AACH,KAPD;AASH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,0CACF,KAAKN,KAAL,CAAWO,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAyC,IADvC,EAEH,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAKH;;AAnBwC;;AAsB7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHD,IAAAA,UAAU,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AAFzB,GAAP;AAIH,CALD;;AAOA,eAAehB,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,CAAP,CAAuDI,cAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { setCases, toggleIsFetching } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport * as axios from 'axios';\nimport Preloader from '../common/Preloader';\n\n\nclass CasesContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get('http://localhost:3000/cases', {\n            headers: {\n              'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTU2OGI3ZGVhNWE4MzQxM2U0M2RjMTIiLCJpYXQiOjE1ODMwODU3NDN9.xX8_VysEZVWlYVLItbV-Azk88ZT772zjyn0PxyZ0x9Q'\n            }\n        }).then(response => {\n            this.props.toggleIsFetching(false);\n            this.props.setCases(response.data);\n        }\n        )\n    }\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader />  : null}\n            <Cases cases={this.props.cases}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        cases: state.casesPage.cases,\n        isFetching: state.casesPage.isFetching\n    }\n}\n\nexport default connect(mapStateToProps, {setCases, toggleIsFetching})(CasesContainer)"]},"metadata":{},"sourceType":"module"}