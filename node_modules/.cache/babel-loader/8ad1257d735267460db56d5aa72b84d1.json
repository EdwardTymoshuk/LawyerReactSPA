{"ast":null,"code":"import _objectSpread from \"/Users/martapetrovych/Documents/Projects/LawyerReactSPA/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst SET_CASES = 'SET_CASES';\nconst ADD_CASE = 'ADD_CASE';\nconst UPDATE_NEW_CASE = 'UPDATE_NEW_CASE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nlet initialState = {\n  cases: [],\n  isFetching: false\n};\n\nconst casesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASES:\n      return _objectSpread({}, state, {\n        cases: [...state.cases, ...action.cases]\n      });\n\n    case ADD_CASE:\n      let body = state.newCase;\n      return _objectSpread({}, state, {\n        newCase: {},\n        cases: [...state.cases, body]\n      });\n\n    case UPDATE_NEW_CASE:\n      return _objectSpread({}, state, {\n        newCase: action.newCase\n      });\n\n    case TOGGLE_IS_FETCHING:\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const setCases = cases => ({\n  type: SET_CASES,\n  cases\n});\nexport const addCase = () => ({\n  type: ADD_CASE\n});\nexport const updateNewCase = newCase => ({\n  type: UPDATE_NEW_CASE,\n  newCase\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default casesReducer;","map":{"version":3,"sources":["/Users/martapetrovych/Documents/Projects/LawyerReactSPA/src/redux/casesReducer.js"],"names":["SET_CASES","ADD_CASE","UPDATE_NEW_CASE","TOGGLE_IS_FETCHING","initialState","cases","isFetching","casesReducer","state","action","type","body","newCase","setCases","addCase","updateNewCase","toggleIsFetching"],"mappings":";AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAAnB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,SAAL;AACE,+BAAYQ,KAAZ;AAAmBH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiB,GAAGI,MAAM,CAACJ,KAA3B;AAA1B;;AACA,SAAKJ,QAAL;AACE,UAAIU,IAAI,GAAGH,KAAK,CAACI,OAAjB;AACA,+BACKJ,KADL;AAEEI,QAAAA,OAAO,EAAE,EAFX;AAGEP,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBM,IAAjB;AAHT;;AAKF,SAAKT,eAAL;AACE,+BACKM,KADL;AAEEI,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAFlB;;AAIJ,SAAKT,kBAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFrB;;AAIF;AACE,aAAOE,KAAP;AArBJ;AAuBD,CAxBD;;AAyBA,OAAO,MAAMK,QAAQ,GAAIR,KAAD,KAAY;AAAEK,EAAAA,IAAI,EAAEV,SAAR;AAAmBK,EAAAA;AAAnB,CAAZ,CAAjB;AACP,OAAO,MAAMS,OAAO,GAAG,OAAO;AAAEJ,EAAAA,IAAI,EAAET;AAAR,CAAP,CAAhB;AACP,OAAO,MAAMc,aAAa,GAAIH,OAAD,KAAc;AAAEF,EAAAA,IAAI,EAAER,eAAR;AAAyBU,EAAAA;AAAzB,CAAd,CAAtB;AACP,OAAO,MAAMI,gBAAgB,GAAIV,UAAD,KAAiB;AAAEI,EAAAA,IAAI,EAAEP,kBAAR;AAA4BG,EAAAA;AAA5B,CAAjB,CAAzB;AAEP,eAAeC,YAAf","sourcesContent":["const SET_CASES = 'SET_CASES';\nconst ADD_CASE = 'ADD_CASE';\nconst UPDATE_NEW_CASE = 'UPDATE_NEW_CASE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\n\nlet initialState = {\n  cases: [],\n  isFetching: false\n}\n\nconst casesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASES:\n      return { ...state, cases: [...state.cases, ...action.cases] }\n      case ADD_CASE:\n        let body = state.newCase;\n        return {\n          ...state,\n          newCase: {},\n          cases: [...state.cases, body]\n        }\n      case UPDATE_NEW_CASE:\n        return {\n          ...state,\n          newCase: action.newCase\n        }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    default:\n      return state;\n  }\n}\nexport const setCases = (cases) => ({ type: SET_CASES, cases });\nexport const addCase = () => ({ type: ADD_CASE });\nexport const updateNewCase = (newCase) => ({ type: UPDATE_NEW_CASE, newCase });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport default casesReducer;"]},"metadata":{},"sourceType":"module"}