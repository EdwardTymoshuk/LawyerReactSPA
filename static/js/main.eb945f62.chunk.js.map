{"version":3,"sources":["hoc/withAuthRedirect.js","redux/caseElementReducer.js","assets/images/preloader.svg","api/api.js","components/common/FormControls/FormControls.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Add/Add.js","components/Add/AddContainer.js","components/Cases/Cases.js","components/Cases/CasesContainer.js","components/Login/Login.js","components/Login/LoginContainer.js","App.js","redux/redux-store.js","index.js","redux/casesReducer.js","redux/authReducer.js","utils/validators/validators.js","components/common/Preloader/Preloader.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initialState","caseElement","setCaseElement","type","getCaseElement","caseId","dispatch","a","async","casesAPI","response","data","err","alert","message","updateCaseElement","caseElementReducer","action","module","exports","instance","axios","baseURL","headers","getCases","get","then","title","date","adress","firstName","secondName","dob","description","post","deleteCaseElement","delete","addCaseElement","newCase","loginAPI","loginMe","email","password","registerMe","name","authMe","Input","input","meta","hasError","touched","error","className","Textarea","as","rows","Header","push","useHistory","useState","searchingElement","setSearchingElement","Navbar","expand","variant","fixed","Brand","Nav","Link","Button","onClick","setCases","Form","inline","FormControl","placeholder","onChange","e","target","value","searchingCaseElement","searchCase","disabled","logOut","HeaderContainer","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","FormGroup","FormLabel","Field","component","validate","required","Add","Modal","size","aria-labelledby","centered","closeButton","Title","id","Body","values","onHide","uploadCase","Footer","AddContainer","Cases","caseAdd","setCaseAdd","show","cases","icon","faPlus","map","item","Card","key","_id","ListGroup","ListGroupItem","split","ButtonGroup","CasesContainer","length","isFetching","Preloader","compose","casesPage","minLength8","minLength","Label","Control","Feedback","loginError","Login","Container","fluid","setLogin","setLoginData","setLoginError","CaseContainer","lazy","RegistrationMessage","RegistrationContainer","App","exact","path","render","fallback","reducers","combineReducers","casesReducer","caseElementPage","authReducer","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","addCase","toggleIsFetching","status","searchingCase","filter","toLowerCase","includes","registerValidate","setAuthUserData","setNewUserData","alt","src","preloader"],"mappings":"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","file":"static/js/main.eb945f62.chunk.js","sourcesContent":["import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n        if (!this.props.isAuth) return <Redirect to='/login'/>\n        return <Component {...this.props} />\n    }\n}\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    return ConnectedAuthRedirectComponent\n}\n","import { casesAPI } from \"../api/api\";\n\nconst SET_CASE_ELEMENT = 'SET_CASE_ELEMENT';\n\nlet initialState = {\n  caseElement: {}\n}\n\nconst caseElementReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASE_ELEMENT: {\n      return {\n        ...state,\n        caseElement: action.caseElement\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const setCaseElement = (caseElement) => ({ type: SET_CASE_ELEMENT, caseElement });\n\nexport const getCaseElement = (caseId) => async (dispatch) => {\n  let response = await casesAPI.getCaseElement(caseId);\n    try {\n      dispatch(setCaseElement(response.data)); \n    } catch(err) {\n      alert({message: err})\n    }\n}\nexport const updateCaseElement = (caseId, caseElement) => async (dispatch) => {\n  await casesAPI.updateCaseElement(caseId, caseElement);\n  try {\n    dispatch(setCaseElement(caseElement));\n  } catch(err) {\n    alert(err)\n  } \n}\n\n\nexport default caseElementReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.b71c9e01.svg\";","import * as axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://historic-zion-50119.herokuapp.com/',\n    headers: {\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTU2OGI3ZGVhNWE4MzQxM2U0M2RjMTIiLCJpYXQiOjE1ODMwODU3NDN9.xX8_VysEZVWlYVLItbV-Azk88ZT772zjyn0PxyZ0x9Q'\n    }\n})\n\nexport const casesAPI = {\n    getCases() {\n        return instance.get('/cases').then(response => response.data);\n        },\n    getCaseElement(caseId) {\n        return instance.get('/cases/' + caseId);\n    },\n    updateCaseElement(caseId, caseElement) {\n       let {title, date, adress, firstName, secondName, dob, description} = caseElement;\n        return instance.post('/cases/' + caseId, {title, date, adress, firstName, secondName, dob, description});\n    },\n    deleteCaseElement(caseId) {\n        return instance.delete('/cases/' + caseId);\n    },\n    addCaseElement(newCase) {\n        return instance.post('/cases', newCase);\n    }\n    }\n\nexport const loginAPI = {\n    loginMe(email, password) {\n        return instance.post('/users/login', {email, password})\n    },\n    registerMe(name, email, password) {\n        return instance.post('/users/register', {name, email, password})\n    },\n    authMe() {\n        return instance.get('/users/me');\n    }\n}","import React from 'react';\nimport './FormControls.css';\nimport {FormControl, FormText} from 'react-bootstrap';\n\nexport const Input = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={`input ${hasError ? \"error\" : ''}`}>\n            <FormControl  {...input} {...props}/>\n            {hasError && <FormText className=\"text-muted\">{meta.error}</FormText>}\n        </div>\n    )\n}\n\nexport const Textarea = ({input, meta, ...props}) => {\n\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={`textarea${hasError ? \"error\" : ''}`}>\n            <FormControl as=\"textarea\" rows=\"5\" {...input} {...props}/>\n            {hasError && <FormText className=\"text-muted\">{meta.error}</FormText>}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport './Header.css';\nimport { Navbar, Form, FormControl, Button, Nav } from 'react-bootstrap';\nimport { useHistory } from 'react-router'\n\nconst Header = (props) => {\n\n  const {push} = useHistory()\n  const [searchingElement, setSearchingElement] = useState('')\n\n  const handleChange = (e) => {\n    setSearchingElement(e.target.value)\n    let searchingCaseElement = e.target.value\n    props.searchCase(searchingCaseElement)\n  }\n  const searchCase = () => {\n    props.searchCase(searchingElement)\n    setSearchingElement('')\n  }\n  const setCases = () => {\n    props.setCases()\n    push('/')\n  }\n  return (\n    <Navbar expand=\"lg\" variant=\"dark\" fixed=\"top\" className=\"header\">\n      <Navbar.Brand className=\"header-brand\" >LAWYER REACT APP</Navbar.Brand>\n      <Nav.Link className=\"header-cases\"><Button onClick={setCases}>Cases</Button></Nav.Link>\n      <Form inline className=\"header-search\">\n        {\n          props.isAuth\n            ?\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search\"\n              onChange={handleChange}\n            />\n            :\n            <FormControl className=\"header-search-disabled\"\n              disabled\n            />\n        }\n        <Button className=\"header-search-btn\" onClick={searchCase}>Search</Button>\n      </Form>\n      <Nav.Link className=\"header-login\">\n        {props.isAuth\n          ? <div><div className=\"header-login-greating\">Nice to see you, {props.name}!</div><Button className=\"header-logout-btn\" onClick={props.logOut}>Logout</Button></div>\n          : <Button className=\"header-login-btn\" onClick={() => push('/login')}>Login</Button>}\n      </Nav.Link>\n    </Navbar>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Header from './Header';\nimport {connect} from 'react-redux';\nimport {authMe, logOut} from '../../redux/authReducer';\nimport {searchCase, setCases} from '../../redux/casesReducer';\n\nclass HeaderContainer extends React.Component {\n  logOut = () => {\n    this.props.logOut();\n  }\n  searchCase = (searchingElement) => {\n    this.props.searchCase(searchingElement)\n  }\n  setCases = () => {\n    this.props.setCases();\n  }\ncomponentDidMount() {\n    this.props.authMe();\n}\n  render() {\n    return (\n      <Header {...this.props} logOut={this.logOut} searchCase={this.searchCase} />\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n  name: state.auth.name\n})\n  \nexport default connect(mapStateToProps, {authMe, logOut, searchCase, setCases})(HeaderContainer);","import React from 'react';\nimport './Add.css';\nimport { Modal, Button, Form, FormGroup, FormLabel} from 'react-bootstrap';\nimport {reduxForm, Field} from 'redux-form';\nimport { Input, Textarea } from '../common/FormControls/FormControls';\nimport { required } from '../../utils/validators/validators';\n\nconst Add = (props) => {\n\n  const addCase = (values) => {\n    const {title, date, adress, firstName, secondName, dob, description} = values;\n    props.onHide();\n    props.uploadCase({title, date, adress, firstName, secondName, dob, description});\n    }\n\n  return (\n<Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          To add a new case please fill the fields below:\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n<LoginReduxForm onSubmit={addCase}/>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nconst AddForm = (props) => {\n  return (\n  <Form onSubmit={props.handleSubmit}>\n        <FormGroup>\n          <FormLabel>Title:</FormLabel>\n          <Field name=\"title\" placeholder=\"Case title\" component={Input}/>\n          </FormGroup>\n          <FormGroup>\n          <FormLabel>Date:</FormLabel>\n        <Field name=\"date\" placeholder=\"Case date\" component={Input}/>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Adress:</FormLabel>\n        <Field name=\"adress\" placeholder=\"Case adress\" component={Input}/>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>First Name *:</FormLabel>\n        <Field validate={[required]} name=\"firstName\" placeholder=\"Client first name\" component={Input}/>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Second Name *:</FormLabel>\n        <Field validate={[required]} name=\"secondName\" placeholder=\"Client second name\" component={Input}/>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Date of Birth:</FormLabel>\n        <Field name=\"dob\" placeholder=\"Client date of birth\" component={Input}/>\n        </FormGroup>\n        <FormGroup>\n          <FormLabel>Description:</FormLabel>\n        <Field name=\"description\" placeholder=\"Some case description\" component={Textarea}/>\n        </FormGroup>\n          <Button type=\"submit\">\n            Save\n        </Button>\n        </Form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({form: 'add'})(AddForm);\n\n\nexport default Add;","import { connect } from 'react-redux';\nimport Add from './Add';\nimport {uploadCase} from '../../redux/casesReducer';\n\nlet mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst AddContainer = connect(mapStateToProps, {uploadCase})(Add)\n\nexport default AddContainer;","import React from \"react\";\nimport { Card, ListGroup, ListGroupItem, Button, ButtonGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport AddContainer from '../Add/AddContainer';\nimport './Cases.css';\n\nconst Cases = (props) => {\n    const [caseAdd, setCaseAdd] = React.useState(false);\n    if (caseAdd) return <AddContainer show={caseAdd} onHide={() => setCaseAdd(false)} cases={props.cases} />\n    return (\n        <div className=\"cases\">\n            <header className=\"cases-header\">\n                ALL CASES\n            </header>\n            <div>\n                <Button className=\"cases-btn\" onClick={() => setCaseAdd(true)} variant=\"light\"><FontAwesomeIcon icon={faPlus} size=\"5x\" /></Button>\n            </div>\n            <div className=\"cases-body\">\n                {\n                    props.cases.map((item) => {\n                        return <Card key={item._id}>\n                            <Card.Header>\n                                <span>No of case:</span> {item._id}\n                            </Card.Header>\n                            <ListGroup className=\"list-group-flush\">\n                                <ListGroupItem><span>Title:</span> {item.title}</ListGroupItem>\n                                <ListGroupItem><span>Date:</span> {item.date.split('T')[0]}</ListGroupItem>\n                                <ListGroupItem><span>First name:</span> {item.firstName}</ListGroupItem>\n                                <ListGroupItem><span>Second name:</span> {item.secondName}</ListGroupItem>\n                                <ListGroupItem><span>Adress:</span> {item.adress}</ListGroupItem>\n                            </ListGroup>\n                            <Card.Body>\n                                <ButtonGroup>\n                                    <Button variant=\"primary\"><NavLink to={\"/cases/\" + item._id}>Show</NavLink></Button>\n                                </ButtonGroup>\n                            </Card.Body>                    \n                        </Card>\n                    })\n                }\n                </div>\n        </div>\n    )\n}\n\nexport default Cases;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {compose} from 'redux';\nimport { getCases } from '../../redux/casesReducer';\nimport Cases from './Cases';\nimport Preloader from '../common/Preloader/Preloader';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\n\nclass CasesContainer extends React.Component {\n    componentDidMount() {\n       if (!this.props.cases.length) this.props.getCases();\n    }\n\n     render() {\n        return <>\n            {this.props.isFetching ? <Preloader />  : null }\n            <Cases cases={this.props.cases} />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        cases: state.casesPage.cases,\n        isFetching: state.casesPage.isFetching,\n    }\n}\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {getCases}))(CasesContainer);","import React from 'react';\nimport {Form, Button, FormGroup, Container} from 'react-bootstrap';\nimport {reduxForm, Field} from 'redux-form';\nimport {Redirect, NavLink} from 'react-router-dom';\nimport './Login.css';\nimport { required, minLength } from '../../utils/validators/validators';\nimport { Input } from '../common/FormControls/FormControls';\n\nconst minLength8 = minLength(8);\n\nconst Login = (props) => {\n\n  let setLogin = (values) => {\n    const {email, password} = values\n    props.setLogin(email, password)\n\n  }\n\n  if (props.isAuth) return <Redirect to=\"/cases\" />\n  return (\n        <Container fluid className=\"login\">\n          <header className=\"login-header\">Login</header>\n          <LoginReduxForm onSubmit={setLogin} loginError={props.loginError}/>\n        </Container>\n    )\n}\n\nconst LoginForm = (props) => {\n  return (\n    <div>\n    <Form className=\"login-form\" onSubmit={props.handleSubmit}>\n      <FormGroup>\n       <Form.Label>Email: </Form.Label>\n      <Field validate={[required]} placeholder=\"Email\" name=\"email\" component={Input} />\n      </FormGroup>\n      <FormGroup>\n      <Form.Label>Password: </Form.Label>\n        <Field validate={[required, minLength8]} placeholder=\"Password\" name=\"password\" component={Input} type=\"password\" />\n        </FormGroup>\n        <FormGroup>\n        <Form.Control.Feedback className=\"login-form-error\" type=\"invalid\">\n                {props.loginError}\n              </Form.Control.Feedback>\n        </FormGroup>\n      <Button className=\"login-btn\" type=\"submit\">Login</Button>\n    </Form>\n    <div>If you don`t have an account, please <NavLink to='/registration'>click here</NavLink></div>\n    </div>\n  )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nexport default Login;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setLoginData } from '../../redux/authReducer';\nimport Login from './Login';\n\nconst LoginContainer = (props) => {\n\n  const [loginError, setLoginError] = useState()\n\n  const setLogin = (email, password) => {\n    props.setLoginData(email, password).then(response => \n      setLoginError(response)\n    )\n  }\n  return (\n      <Login {...props} setLogin={setLogin} loginError={loginError}/>\n    )\n  }\nlet mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth\n  \n} )\n  export default connect(mapStateToProps, {setLoginData})(LoginContainer);","import React, { Suspense } from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { Route,Switch, Redirect} from 'react-router-dom';\nimport CasesContainer from './components/Cases/CasesContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport Preloader from './components/common/Preloader/Preloader';\n\nconst CaseContainer = React.lazy(() => import('./components/Cases/Case/CaseContainer'))\nconst RegistrationMessage = React.lazy(() => import('./components/Registration/RegistrationMessage'))\nconst RegistrationContainer = React.lazy(() => import('./components/Registration/RegistrationContainer'))\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n     <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/cases\" />} />\n        <Route exact path=\"/cases\" render={() => <CasesContainer />} />\n        <Route path=\"/login\" render={() => <LoginContainer />} />\n        <Route path=\"/registration\" render={() => <Suspense fallback={<Preloader />}><RegistrationContainer /></Suspense>} />\n        <Route path=\"/success-registration\" render={() => <Suspense fallback={<Preloader />}><RegistrationMessage /></Suspense>} />\n        <Route path=\"/cases/:caseId\" render={() => <Suspense fallback={<Preloader />}><CaseContainer /></Suspense>} />\n      </Switch>\n    </div>\n\n  );\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport casesReducer from './casesReducer';\nimport caseElementReducer from './caseElementReducer';\nimport authReducer from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\n\nlet reducers = combineReducers ({\n    casesPage: casesReducer,\n    caseElementPage:caseElementReducer,\n    auth: authReducer,\n    form: formReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\nexport default store;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport store from './redux/redux-store'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'))\n\n","import { casesAPI } from '../api/api';\n\nconst SET_CASES = 'SET_CASES';\nconst ADD_CASE = 'ADD_CASE';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\n\nlet initialState = {\n  cases: [],\n  isFetching: false\n}\n\nconst casesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CASES:\n      return { ...state, cases: [...action.cases] }\n    case ADD_CASE:\n      return {\n        ...state,\n        cases: [...state.cases, action.newCase]\n      }\n    case TOGGLE_IS_FETCHING:\n      return {\n        ...state,\n        isFetching: action.isFetching\n      }\n    default:\n      return state;\n  }\n}\nexport const setCases = (cases = initialState.cases) => ({ type: SET_CASES, cases });\nexport const addCase = (newCase) => ({ type: ADD_CASE, newCase });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\n\nexport const getCases = () => async (dispatch) => {\n  dispatch(toggleIsFetching(true));\n  let data = await casesAPI.getCases();\n  dispatch(toggleIsFetching(false));\n  dispatch(setCases(data));\n}\nexport const uploadCase = (newCase) => async (dispatch) => {\n  await casesAPI.addCaseElement(newCase);\n  try {\n    alert(\"New case was successfully added!\")\n  } catch (err) {\n    alert({ message: err })\n  }\n  dispatch(addCase(newCase));\n}\nexport const deleteCaseElement = (caseId) => async (dispatch) => {\n  let response = await casesAPI.deleteCaseElement(caseId);\n  if (response.status === 200) alert('The case was succesfully deleted!');\n  dispatch(getCases());\n}\nexport const searchCase = (searchingCase) => async (dispatch) => {\n  let data = await casesAPI.getCases();\n  (searchingCase !== '')\n  ?\n  dispatch(setCases(data.filter(item => {\n    if (item.firstName.toLowerCase().includes(searchingCase.toLowerCase())\n      || item.secondName.toLowerCase().includes(searchingCase.toLowerCase())\n      || item.title.toLowerCase().includes(searchingCase.toLowerCase())) { \n        return item \n      } else {\n        return ''\n      }\n  })))\n  :\n  dispatch(setCases(data))\n}\n\nexport default casesReducer;","import {loginAPI} from '../api/api'\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_LOGOUT = 'SET_LOGOUT';\nconst SET_AUTH_ME = 'SET_AUTH_ME';\nconst SET_REGISTER_VALIDATE = 'SET_REGISTER_VALIDATE';\n\nlet initialState = {\n  name: null,\n  email: null,\n  isAuth: false,\n  registerValidate: false\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return {\n        ...state,\n        name: action.name,\n        email: action.email,\n        isAuth: true\n      }\n    }\n    case SET_LOGOUT: {\n      return {\n        ...state,\n        name: null,\n        email: null,\n        isAuth: false,\n        registerValidate: false\n      }\n    }\n    case SET_AUTH_ME: {\n      return {\n        ...state\n      }\n    }\n    case SET_REGISTER_VALIDATE: {\n      return {\n        ...state, registerValidate: true\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport const setAuthUserData = (name, email) => ({ type: SET_USER_DATA, name, email});\nexport const logOut = () => ({type: SET_LOGOUT});\nexport const authMe = () => ({type: SET_AUTH_ME});\nexport const setRegisterValidate = () => ({type: SET_REGISTER_VALIDATE});\nexport const setLoginData = (email, password) => async (dispatch) => {\n    try {\n        let response = await loginAPI.loginMe({email, password})\n        dispatch(setAuthUserData(response.data.name, response.data.email));\n      } catch(err) { \n        return(err.response.data)\n    }\n}\nexport const setNewUserData = (name, email, password) => async (dispatch) => {\n  try {\n    await loginAPI.registerMe(name, email, password)\n    dispatch(setRegisterValidate());\n  } catch(err) {\n    return(err.response.data)\n  }\n}\nexport default authReducer;","export const required = value => {\n    if (value) return undefined;\n    return \"Field is required\"\n}\nexport const minLength = (minLength) => value => {\n    if (value && value.length < minLength) return `Min length is ${minLength} symbols`\n}\nexport const maxLength = (maxLength) => value => {\n    if (value && value.length < minLength) return `Min length is ${maxLength} symbols`\n}","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\n\nconst Preloader = (props) => {\n    return (\n        <div className=\"preloader\">\n            <img alt=\"preloader\" src={preloader} />\n        </div>\n    )\n}\n\nexport default Preloader;"],"sourceRoot":""}